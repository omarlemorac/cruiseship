if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
snoremap <silent> 	 i<Right>=TriggerSnippet()
snoremap ' b<BS>'
map ,pp :setlocal paste!
map ,q :e ~/buffer
noremap ,m mmHmt:%s///ge'tzt'm
map ,s? z=
map ,sa zg
map ,sp [s
map ,sn ]s
map ,ss :setlocal spell!
map ,p :cp
map ,n :cn
map ,co ggVGy:tabnew:set syntax=qfpgg
map ,cc :botright cope
vnoremap <silent> ,r :call VisualSelection('replace')
map ,  :vimgrep // %<Right><Right><Right><Right><Right><Right><Right><Right><Right>
map ,g :vimgrep // **/*.<Left><Left><Left><Left><Left><Left><Left>
nmap ,w :w!
nmap gx <Plug>NetrwBrowseX
vnoremap <silent> gv :call VisualSelection('gv')
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
map <F8> :tabnext
map <F7> :tabprevious
map <silent> <F6> :NERDTreeToggle
inoremap <silent> 	 =TriggerSnippet()
inoremap <silent> 	 =ShowAvailableSnips()
imap " ""<Left>
imap ' ''<Left>
imap ( ()<Left>
imap [ []<Left>
imap { {}<Left>
cabbr tf tabfind
cabbr tp tabprevious
cabbr tn tabnext
cabbr tc tabclose
cabbr te tabedit
cabbr nm match NONE
cabbr mm match ErrorMsg 
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set autoread
set background=dark
set backspace=eol,start,indent
set cmdheight=2
set expandtab
set hidden
set hlsearch
set ignorecase
set incsearch
set lazyredraw
set matchtime=2
set printoptions=paper:a4
set ruler
set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim74,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after
set scrolloff=7
set shiftwidth=4
set showmatch
set smartcase
set smartindent
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set tabstop=4
set textwidth=79
set wildignore=*.o,*~,*.pyc
set wildmenu
set window=38
" vim: set ft=vim :
